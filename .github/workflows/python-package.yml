name: Python package

on:
  push:
    branches:
      - 'main'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8
          python -m pip install build
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      # - name: Test with pytest
      #   run: |
      #     python -m unittest discover ./SpatialTransform/tests

      - name: Build package
        run: python -m build

      # - name: Release on GitHub
      #   # if: github.ref == 'refs/heads/main'
      #   uses: softprops/action-gh-release@v1
      #   with:
      #     files: |
      #       SpatialTransform/*
      #       readme.md
      #       changelog.md
      #       LICENSE
      #     body_path: CHANGELOG.md
      #     draft: false
      #     prerelease: false
      #     fail_on_unmatched_files: true

      - name: Publish package PyPI
        # if: github.ref == 'refs/heads/main'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}

      - name: Publish package to TestPyPI
        # if: github.ref == 'refs/heads/preview'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
